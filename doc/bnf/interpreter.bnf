<expression> ::=
    (<expression>)
  | <unary-op-expr>
  | <bin-op-expr>
  | <compare-op-expr>
  | <bool-op-expr>
  | <number>
  | lambda <formals>: <expression>
  | <expression>(<list-of-expression>)
  | <list-of-character>

<formals> ::=
    <empty>
  | <list-of-character>
  | <list-of-character>, <formals>
  | <formals-with-defaults>

<formals-with-defaults> ::=
    <empty>
  | <list-of-character>=<expression>
  | <list-of-character>=<expression>, <formals-with-defaults>

<list-of-expression> ::=
    <empty>
  | <expression>
  | <expression>, <list-of-expression>

<bool-op-expr> ::=
    <expression> and <expression>
  | <expression> or <expression>

<bin-op-expr> ::=
    <expression> * <expression>
    <expression> / <expression>
    <expression> + <expression>
    <expression> - <expression>

<unary-op-expr> ::=
    - <expression>
  | not <expression>

<compare-op-expr> ::=
    <expression> <compare-suite>

<compare-suite> ::=
    <compare-op> <expression> <compare-suite>
  | <compare-op> <expression>

<compare-op> ::=
    < | > | <= | >= | == | !=

Version 3.2.0, 2023-05-17
	NEW FEATURES:
	* Previously, if a solo model had a different input length than the
	residual model, you could not combine them. Melanie added logic so that if
	the solo model has a smaller input length (for example, because it has
	fewer layers), the sequence will automatically be cropped down to match
	it. In this way, you don't have to match solo and residual architectures
	any more. 

	ENHANCEMENTS:
	* Further re-formatting to comply with PEP8. 

	CONTRIBUTORS:
	Melanie Weilert (cropdown logic), Charles McAnany (code cleanup)

Version 3.1.0, 2023-05-14
	NEW FEATURES:
	* Added an automatic reverse complement strand selection feature. Instead
	of saying '"revcomp-task-order" : [1,0]', you can now say
	'"revcomp-task-order":"auto"' when you have one or two tasks in a head.

	ENHANCEMENTS:
	* Code cleanup in general, such as removing unused imports and tidying up
	formatting.

	BUG FIXES:
	* Fixed a missing import in prepareBed.py that broke the regex mode. 

	CONTRIBUTORS:
	Charles McAnany


Version 3.0.1, 2023-04-26
	ENHANCEMENTS:
	* Formatted the code throughout the repository to more closely comply with
	PEP8.

	BUG FIXES:
	* Fixed a bug in argument order for deduplicating in prepareBed.py

	CONTRIBUTORS:
	Charles McAnany

Version 3.0.0, 2023-03-10
	BREAKING CHANGES:
	* There is a new "remove-overlaps" field that is mandatory in
	prepareBed.py json files. If set to true, then you can set how close two
	peaks must be before they are considered overlapping. (Thanks to Melanie
	Weilert for the implementation.)
	* On discussion with Melanie, it occurred that the cropdown feature of the
	transformation model is never appropriate. Therefore, this feature has
	been removed.  Instead, in a future version, there will be a feature to 
	crop down the input sequence to the solo model during training the
	combined model. (Charles McAnany) 
	* Since there is no cropping, it was silly to call the input-length
	"sequence-input-length" inside the transformation config json. It is now
	sensibly called "input-length". 

	ENHANCEMENTS:
	* The PISA code was totally rewritten; it now uses a streaming 
	architecture so that loading the data, calculating shap scores, and saving
	data are done by different threads. This cuts way down on memory use, and
	makes it possible to run pisa over an entire genome. (generating 100 GiB
	per megabase or so.) (Charles McAnany)

	BUG FIXES:
	* In the combined config, the documentation called a parameter
	"output-directory", but the code expected "output-prefix". The
	documentation has been corrected. (Charles McAnany)


	CONTRIBUTORS:
	Melanie Weilert, Charles McAnany. 

Version 2.0.2, 2023-02-17
	ENHANCEMENTS:
	* interpretPisaBed.py will now include predictions and reference
	predictions in the output hdf5.

	CONTRIBUTORS:
	Charles McAnany

Version 2.0.1, 2023-02-09
	ENHANCEMENTS:
	* prepareBed.py will no longer replace the names in your bed files; the
	generated files will have the same names as the input beds. (Suggested by
	Melanie)

	CONTRIBUTORS:
	Melanie Weilert, Charles McAnany


Version 2.0.0, 2023-02-07

	BREAKING CHANGES:

	* Added a reverse-complement flag to prepareTrainingData.py. If this is	set
	to true, then you must specify strand mappings to each of the heads in
	that file. If you want your code to behave like before, just set
	"reverse-complement" to false in the json file for prepareTrainingData.py.

	ENHANCEMENTS:
	* Reverse complement support added, see overview.tex in the section on
	prepareTrainingData.py. (Charles McAnany)

	BUG FIXES:
	* none

	CONTRIBUTORS:
	Charles McAnany. 

PREVIOUS VERSIONS:
	Versions of BPReveal before 2.0.0 are not recorded here, but the software
	would not have been completed without help from Julia Zeitlinger, Anshul
	Kundaje, and Melanie Weilert. 


